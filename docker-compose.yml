version: '3.0'

services:

  eureka-server:
    image: eureka-server:latest
    hostname: eureka-server
    ports:
      - "8761:8761"
    networks:
      - my-network
    environment:
      eureka.instance.hostname: eureka-server
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka

  config-server:
    image: config-server:latest
    ports:
      - "8888:8888"
    depends_on:
      - eureka-server
    networks:
      - my-network
    environment:
      server.port: 8888
      eureka.instance.hostname: config-server
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka

  api-gateway:
    image: api-gateway:latest
    depends_on:
      - eureka-server
      - config-server
    ports:
      - "8080:8080"
    links:
      - config-server
    networks:
      - my-network
    environment:
      logging.level: DEBUG
      server.port: 8080
      eureka.instance.hostname: api-gateway
      spring.cloud.config.service-id: config-server
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
      spring.cloud.config.discovery.enabled: true
      spring.config.import: http://config-server:8888

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.4
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

networks:
  my-network:
    driver: bridge